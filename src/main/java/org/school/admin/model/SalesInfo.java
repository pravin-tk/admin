package org.school.admin.model;

// Generated 3 Jul, 2015 3:58:23 PM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SalesInfo generated by hbm2java
 */
@Entity
@Table(name = "sales_info")
public class SalesInfo implements java.io.Serializable {

	private Integer id;
	private AdminUser adminUserByDataCollectorId;
	private AdminUser adminUserBySalesExecutiveId;
	private School school;
	private String infoProviderDesignation;
	private String infoProviderName;
	private String infoProviderContactNo;
	private String infoProviderEmail;
	private Date lastUpdatedOn;
	private Integer lastUpdatedBy;

	public SalesInfo() {
	}

	public SalesInfo(AdminUser adminUserByDataCollectorId,
			AdminUser adminUserBySalesExecutiveId, School school,
			String infoProviderDesignation, String infoProviderName,
			String infoProviderContactNo, String infoProviderEmail,
			Date lastUpdatedOn, Integer lastUpdatedBy) {
		this.adminUserByDataCollectorId = adminUserByDataCollectorId;
		this.adminUserBySalesExecutiveId = adminUserBySalesExecutiveId;
		this.school = school;
		this.infoProviderDesignation = infoProviderDesignation;
		this.infoProviderName = infoProviderName;
		this.infoProviderContactNo = infoProviderContactNo;
		this.infoProviderEmail = infoProviderEmail;
		this.lastUpdatedOn = lastUpdatedOn;
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "data_collector_id")
	public AdminUser getAdminUserByDataCollectorId() {
		return this.adminUserByDataCollectorId;
	}

	public void setAdminUserByDataCollectorId(
			AdminUser adminUserByDataCollectorId) {
		this.adminUserByDataCollectorId = adminUserByDataCollectorId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sales_executive_id")
	public AdminUser getAdminUserBySalesExecutiveId() {
		return this.adminUserBySalesExecutiveId;
	}

	public void setAdminUserBySalesExecutiveId(
			AdminUser adminUserBySalesExecutiveId) {
		this.adminUserBySalesExecutiveId = adminUserBySalesExecutiveId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "school_id")
	public School getSchool() {
		return this.school;
	}

	public void setSchool(School school) {
		this.school = school;
	}

	@Column(name = "info_provider_designation", length = 200)
	public String getInfoProviderDesignation() {
		return this.infoProviderDesignation;
	}

	public void setInfoProviderDesignation(String infoProviderDesignation) {
		this.infoProviderDesignation = infoProviderDesignation;
	}

	@Column(name = "info_provider_name", length = 200)
	public String getInfoProviderName() {
		return this.infoProviderName;
	}

	public void setInfoProviderName(String infoProviderName) {
		this.infoProviderName = infoProviderName;
	}

	@Column(name = "info_provider_contact_no", length = 20)
	public String getInfoProviderContactNo() {
		return this.infoProviderContactNo;
	}

	public void setInfoProviderContactNo(String infoProviderContactNo) {
		this.infoProviderContactNo = infoProviderContactNo;
	}

	@Column(name = "info_provider_email", length = 200)
	public String getInfoProviderEmail() {
		return this.infoProviderEmail;
	}

	public void setInfoProviderEmail(String infoProviderEmail) {
		this.infoProviderEmail = infoProviderEmail;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_on", length = 19)
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

}
