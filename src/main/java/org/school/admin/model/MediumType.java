package org.school.admin.model;

// Generated 30-May-2015 14:03:54 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TeachingMedium generated by hbm2java
 */
@Entity
@Table(name = "medium_type")
public class MediumType implements java.io.Serializable {

	private Short id;
	private String title;
	private String description;
	private Date lastUpdatedOn;
	private Integer lastUpdatedBy;
	private Set<SchoolMedium> schoolMeduims = new HashSet<SchoolMedium>(0); 

	public MediumType() {
	}

	public MediumType(String title, Date lastUpdatedOn,
			String description, Integer lastUpdatedBy) {
		this.title = title;
		this.description = description;
		this.lastUpdatedOn = lastUpdatedOn;
		this.lastUpdatedBy = lastUpdatedBy;
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	
	public Short getId() {
		return id;
	}

	public void setId(Short mediumId) {
		this.id = mediumId;
	}
	
	@Column(name = "title", nullable = false, length = 100)
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}
	
	@Column(name = "description", nullable = false, length = 200)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_on", length = 19)
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Column(name = "last_updated_by")
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}
	
	@OneToMany(fetch=FetchType.LAZY, mappedBy="mediumType")
	public Set<SchoolMedium> getSchoolMeduims() {
		return schoolMeduims;
	}

	public void setSchoolMeduims(Set<SchoolMedium> schoolMeduims) {
		this.schoolMeduims = schoolMeduims;
	}


}
